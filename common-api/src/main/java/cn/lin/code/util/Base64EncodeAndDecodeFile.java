package cn.lin.code.util;import org.apache.commons.io.FileUtils;import java.io.*;public class Base64EncodeAndDecodeFile {    public static void main(String[] args) throws Exception {        FileInputStream fis= null;        FileOutputStream fos=null;  getDecodeInputStream(fis,fos);   /*   String str= "asdasjkhdasjda";        String encode = Base64Utils.encode(str.getBytes());        byte[] decode = Base64Utils.decode(encode);        System.out.println(new String(decode));*/        System.out.println(fis);    }    /**     * @description:加密文件     * @param fis     * @param fos     * @return     * @throws Exception     */    private static FileInputStream getEncodeFileInputStream(FileInputStream fis, FileOutputStream fos) throws Exception {        try {            File file= new File("D:/212.txt");            File file1 =new File("D:/2122.txt");            if (!file1.exists()) {                file1.createNewFile();            }            fos= FileUtils.openOutputStream(file1);            fis = FileUtils.openInputStream(file);            byte[] bytes = new byte[1024];            byte[] buf= new byte[1024*1024*10];//最大1000万个字节            int byteread=0;            int index=0;            while ((byteread=fis.read(bytes))!=-1){                for (int i = 0; i <byteread ; i++) {                   buf[i+index]=bytes[i];                }                index+=byteread;              //  byte[] bytes1 = encode.getBytes();               // fos.write(bytes, 0, byteread);                //fos.flush();            }            String encode = Base64Utils.encode(buf);            byte[] encodeBytes = encode.getBytes();            int length = encodeBytes.length;            for (int i = 0; i < length; i++) {                 fos.write(encodeBytes[i]);            }        } catch (IOException e) {            e.printStackTrace();        } finally {            fos.close();            fis.close();        }        return fis;    }    /**密文档     * @description:解     * @param     * @author:wxl     * @date: 2017/10/27 10:28     */    private static FileInputStream getDecodeInputStream(FileInputStream fis, FileOutputStream fos) throws Exception{        try {            File file= new File("D:/2122.txt");            File file1 =new File("D:/2212.txt");            if (!file1.exists()) {                file1.createNewFile();            }            fos= FileUtils.openOutputStream(file1);            fis = FileUtils.openInputStream(file);            byte[] bytes = new byte[1024];            int byteread=0;            byte [] buf= new byte[1024*1024*102];            int index=0;            while ((byteread=fis.read(bytes))!=-1){                for (int i = 0; i <byteread ; i++) {                    buf[i+index]=bytes[i];                }                index+=byteread;              /*  byte[] decode = Base64Utils.decode(new String(bytes));                System.out.println(new String(decode,"utf-8"));                fos.write(decode, 0, byteread);                fos.flush();*/            }            String string=new String(buf);            byte[] decode = Base64Utils.decode(string);            int length = decode.length;            for (int i = 0; i < length; i++) {                fos.write(decode[i]);            }        } catch (IOException e) {            e.printStackTrace();        } finally {            fos.close();            fis.close();        }        return fis;    }}